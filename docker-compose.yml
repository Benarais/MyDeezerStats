version: '3.8'

services:
  frontend:
    build:
      context: ./3-FRONTEND/my-deezer-stats-front
      dockerfile: Dockerfile
    container_name: deezer-frontend
    ports:
      - "80:80"
    networks:
      - mydeezer-network
    # Ajout de configurations pour éviter les problèmes de fichiers
    tmpfs:
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true

  api:
    build:
      context: ./2-BACKEND/src
      dockerfile: Dockerfile
    container_name: deezer-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - MongoDbSettings__ConnectionString=mongodb://admin:admin@mongodb:27017
      - MongoDbSettings__DatabaseName=MyDeezerStats
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./1-DATA:/app/data
    networks:
      - mydeezer-network

  mongodb:
    image: mongo:7.0
    container_name: deezer-mongodb
    ports:
      - "27017:27017"
    volumes:
      - deezer_mongo_data:/data/db
      - ./1-DATA/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 5
    networks:
      - mydeezer-network

volumes:
  deezer_mongo_data:
    driver: local

networks:
  mydeezer-network:
    driver: bridge